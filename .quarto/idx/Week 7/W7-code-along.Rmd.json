{"title":"Week 7 Code along/Challenge","markdown":{"yaml":{"title":"Week 7 Code along/Challenge","author":"Janelle Tan","date":"`r Sys.Date()`","output":{"pdf_document":"default","html_document":"default"}},"headingText":"II. Code to edit and execute using the Code-along-7.Rmd file","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n<br>\n\n## A. All about ggplot2\n<br>\n\n### 1. loading Palmer Penguins (Slide #6)\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nglimpse(penguins)\n\n\n```\n<br>\n\n### 2. Plot recreation (Slide #8 - 20)\n\n```{r, eval=TRUE,echo=TRUE}\n# starting w the penguins data frame\n\nggplot(data = penguins)\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# map bill depth to the x-axis\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm)) # <- name of var has to be the same of that in dataset\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Map bill length to the y-axis\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm))\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Represent each observation with a point, note the + symbol\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm)) + \n geom_point()\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Map species to the colour of each point; ie creating a legend\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point()\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Title the plot \"Bill depth and length\", note double quotes needed\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\")\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"; precise title, descriptive subtitle\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\nsubtitle = \"Dimensions for Adelie, \nChinstrap, and Gentoo Penguins\")\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\"; changing default labels, note double quotes\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\")\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# labelling the legend \"Species\", note double quotes\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    colour = \"Species\")\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Add a caption for the data source\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    colour = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\")\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# catering to the colour-blind\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    colour = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\") +\n  scale_colour_viridis_d()\n```\n<br>\n\n\n### 3. Alternative way of writing the same code (Slide #20)\n\n```{r, eval=TRUE,echo=TRUE}\n# omitting data and mapping\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n scale_colour_viridis_d()\n\n\n# 2. aes layer outside ggplot function\n\nggplot(penguins) + # Data layer\n aes(x = bill_depth_mm, \n y = bill_length_mm,\n colour = species) + # Aesthetics layer \n geom_point() + # Geometric layer\n scale_colour_viridis_d()\n```\n<br>\n\n### 4. Aesthetics options (Slide #21)\n\n```{r, eval=TRUE,echo=TRUE}\n# Colour\n\nggplot(penguins) + aes(x = bill_depth_mm, y = bill_length_mm,\n colour = species) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# Shape\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, colour = species,\n shape = island)) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Size\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, colour = species, shape = species,\n size = body_mass_g)) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Alpha; transparency\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, colour = species,\n shape = species, size = body_mass_g, alpha = flipper_length_mm)) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n\n### 5. Mapping vs Setting (Slide #27-28)\n```{r, eval=TRUE,echo=TRUE}\n# Setting\n\nggplot(penguins) + \n aes(x = bill_depth_mm, \n y = bill_length_mm) + \n geom_point(size = 2, alpha = 0.5)\n```\n<br>\n\n\n### 6. Faceting (Slide #29-34)\n\n```{r, eval=TRUE,echo=TRUE}\n# Displays different subsets of data.\n# Useful for: exploring conditional relationships and large data\n\n#species vs island\nggplot(penguins) +\n aes(x = bill_depth_mm, \n y = bill_length_mm) + \n geom_point() +\n facet_grid(species ~ island) # <- rows ~ columns\n\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# species vs sex\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_grid(species ~ sex)\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# sex vs species -> order matters!\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_grid(sex ~ species)\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# only have 1 var uw to sort the data points by instead of 2 like before\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_wrap(~ species)\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# arranging into 2 columns\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_wrap(~ species, ncol = 2)\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# (. ~ species)\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_grid(. ~ species)\n\n```\n<br>\n\n### 7. Faceting & others (Slide #35)\n```{r, eval=TRUE,echo=TRUE}\n# facet & colour & no legend\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +\n geom_point() + facet_grid(species ~ sex) + scale_color_viridis_d() + \n  guides(color = \"none\")\n\n```\n<br>\n\n\n## B. Visualising numeric variables\n\n### 8. Lending Club dataset (Slides #38-)\n\n```{r, eval=TRUE,echo=TRUE}\nlibrary(openintro)\nglimpse(loans_full_schema)\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# selecting variables\n\nloans <- loans_full_schema %>%\n select(loan_amount, interest_rate, term, grade, \n state, annual_income, homeownership, debt_to_income)\nglimpse(loans)\n\n```\n<br>\n\n### 9. Plotting Histograms\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans) + aes(x = loan_amount) +\n geom_histogram()\n\n```\n<br>\n\n### 10. Changing histogram binwidths\n\n```{r, eval=TRUE,echo=TRUE}\n# binwidth = 1000\nggplot(loans, aes(x = loan_amount)) +\n geom_histogram(binwidth = 1000)\n\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# binwidth = 5000\nggplot(loans, aes(x = loan_amount)) +\n geom_histogram(binwidth = 5000)\n\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# binwidth = 20000\nggplot(loans, aes(x = loan_amount)) +\n geom_histogram(binwidth = 20000)\n\n```\n<br>\n\n### 11. Customising histogram \n```{r, eval=TRUE,echo=TRUE}\n# adding labels\n\nggplot(loans, aes(x = loan_amount)) + geom_histogram(binwidth = 5000) +\n labs(x = \"Loan amount ($)\", y = \"Frequency\", title = \"Amounts of Lending Club loans\" )\n```\n<br>\n\n### 12. Filling with a categorical variable\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\n geom_histogram(binwidth = 5000, alpha = 0.5) +\n labs(x = \"Loan amount ($)\",y = \"Frequency\",title = \"Amounts of Lending Club loans\")\n```\n<br>\n\n### 13. Facet with a categorical variable\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount, fill = homeownership)) + geom_histogram(binwidth = 5000) +\n labs(x = \"Loan amount ($)\",y = \"Frequency\",title = \"Amounts of Lending Club loans\") +\n facet_wrap(~ homeownership, nrow = 3)\n```\n<br>\n\n### 14. Density Plot\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density()\n```\n<br>\n\n### 14. Adjusting Density Plot bandwidths\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 0.5)\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 1) # <- default bandwidth\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 2)\n```\n<br>\n\n### 15. Customising Density Plot \n```{r, eval=TRUE,echo=TRUE}\n# adding labels\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 2) +\n labs( x = \"Loan amount ($)\", y = \"Density\", title = \"Amounts of Lending Club loans\" )\n```\n<br>\n\n### 16. Box Plots & outliers\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = interest_rate)) +\n geom_boxplot()\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = annual_income)) +\n geom_boxplot()\n```\n<br>\n\n### 17. Customising Box Plots\n```{r, eval=TRUE,echo=TRUE}\n# adding labels + removing the ticks along axes (look at diff from prev graph)\n\nggplot(loans, aes(x = interest_rate)) +geom_boxplot() +labs(x = \"Interest rate (%)\",y = NULL,\n title = \"Interest rates of Lending Club loans\") +\n theme( axis.ticks.y = element_blank(), axis.text.y = element_blank() )\n```\n<br>\n\n### 18. Adding a categoric variable\n```{r, eval=TRUE,echo=TRUE}\n# sorting \"interest rates\" by \"grade of application\"\n\nggplot(loans, aes(x = interest_rate,\n y = grade)) +\n geom_boxplot() +\n labs(x = \"Interest rate (%)\",y = \"Grade\",title = \"Interest rates of Lending Club loans\",\n      subtitle = \"by grade of loan\")\n```\n<br>\n\n### 19. Scatterplots\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\n geom_point()\n```\n<br>\n\n### 20. Hex plots\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\n geom_hex()\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# filtering debt to income to < 100\n\nggplot(loans %>% filter(debt_to_income < 100), \n aes(x = debt_to_income, y = interest_rate)) +\n geom_hex()\n```\n<br>\n\n## C. Visualising categoric variables\n\n### 21. Bar plot (slide #67)\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = homeownership)) +\n geom_bar()\n```\n<br>\n\n### 22. Segmented Bar plot (slide #68-69)\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = homeownership, fill = grade)) +\n geom_bar()\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = homeownership, fill = grade)) +\n geom_bar(position = \"fill\")\n```\n<br>\n\n### 23. Customising Bar plots (slide #71)\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(y = homeownership, fill = grade)) + geom_bar(position = \"fill\") +\nlabs( x = \"Proportion\", \n      y = \"Homeownership\", \n      fill = \"Grade\", \n      title = \"Grades of Lending Club loans\", \n      subtitle = \"and homeownership of lendee\")\n```\n<br>\n\n\n## D. Visualising variables of varied types\n\n### 24. Violin plots (slide #73)\n```{r, eval=TRUE,echo=TRUE}\n# helps visualise rs btw var of diff types (eg numeric & categorical)\n\nggplot(loans, aes(x = homeownership, y = loan_amount)) +\n geom_violin()\n\n```\n<br>\n\n### 25. Ridge plots (slide #74)\n```{r, eval=TRUE,echo=TRUE}\n# instead of superimposing them, now placing them above on another\n\nlibrary(ggridges)\nggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) + \n geom_density_ridges(alpha = 0.5)\n\n```\n<br>\n\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n# II. Code to edit and execute using the Code-along-7.Rmd file \n<br>\n\n## A. All about ggplot2\n<br>\n\n### 1. loading Palmer Penguins (Slide #6)\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nglimpse(penguins)\n\n\n```\n<br>\n\n### 2. Plot recreation (Slide #8 - 20)\n\n```{r, eval=TRUE,echo=TRUE}\n# starting w the penguins data frame\n\nggplot(data = penguins)\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# map bill depth to the x-axis\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm)) # <- name of var has to be the same of that in dataset\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Map bill length to the y-axis\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm))\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Represent each observation with a point, note the + symbol\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm)) + \n geom_point()\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Map species to the colour of each point; ie creating a legend\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point()\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Title the plot \"Bill depth and length\", note double quotes needed\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\")\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Add the subtitle \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\"; precise title, descriptive subtitle\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\nsubtitle = \"Dimensions for Adelie, \nChinstrap, and Gentoo Penguins\")\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Label the x and y axes as \"Bill depth (mm)\" and \"Bill length (mm)\"; changing default labels, note double quotes\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\")\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# labelling the legend \"Species\", note double quotes\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    colour = \"Species\")\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Add a caption for the data source\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    colour = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\")\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# catering to the colour-blind\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n labs(title = \"Bill depth and length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Bill depth (mm)\", \n    y = \"Bill length (mm)\",\n    colour = \"Species\",\n    caption = \"Source: Palmer Station LTER / palmerpenguins package\") +\n  scale_colour_viridis_d()\n```\n<br>\n\n\n### 3. Alternative way of writing the same code (Slide #20)\n\n```{r, eval=TRUE,echo=TRUE}\n# omitting data and mapping\n\nggplot(data = penguins,\n mapping = aes(x = bill_depth_mm,\n y = bill_length_mm,\n colour = species)) +\n geom_point() +\n scale_colour_viridis_d()\n\n\n# 2. aes layer outside ggplot function\n\nggplot(penguins) + # Data layer\n aes(x = bill_depth_mm, \n y = bill_length_mm,\n colour = species) + # Aesthetics layer \n geom_point() + # Geometric layer\n scale_colour_viridis_d()\n```\n<br>\n\n### 4. Aesthetics options (Slide #21)\n\n```{r, eval=TRUE,echo=TRUE}\n# Colour\n\nggplot(penguins) + aes(x = bill_depth_mm, y = bill_length_mm,\n colour = species) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# Shape\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, colour = species,\n shape = island)) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Size\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, colour = species, shape = species,\n size = body_mass_g)) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# Alpha; transparency\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, colour = species,\n shape = species, size = body_mass_g, alpha = flipper_length_mm)) +\n geom_point() + scale_colour_viridis_d()\n```\n<br>\n\n### 5. Mapping vs Setting (Slide #27-28)\n```{r, eval=TRUE,echo=TRUE}\n# Setting\n\nggplot(penguins) + \n aes(x = bill_depth_mm, \n y = bill_length_mm) + \n geom_point(size = 2, alpha = 0.5)\n```\n<br>\n\n\n### 6. Faceting (Slide #29-34)\n\n```{r, eval=TRUE,echo=TRUE}\n# Displays different subsets of data.\n# Useful for: exploring conditional relationships and large data\n\n#species vs island\nggplot(penguins) +\n aes(x = bill_depth_mm, \n y = bill_length_mm) + \n geom_point() +\n facet_grid(species ~ island) # <- rows ~ columns\n\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# species vs sex\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_grid(species ~ sex)\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# sex vs species -> order matters!\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_grid(sex ~ species)\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# only have 1 var uw to sort the data points by instead of 2 like before\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_wrap(~ species)\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# arranging into 2 columns\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_wrap(~ species, ncol = 2)\n\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n# (. ~ species)\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) + geom_point() +\n facet_grid(. ~ species)\n\n```\n<br>\n\n### 7. Faceting & others (Slide #35)\n```{r, eval=TRUE,echo=TRUE}\n# facet & colour & no legend\n\nggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +\n geom_point() + facet_grid(species ~ sex) + scale_color_viridis_d() + \n  guides(color = \"none\")\n\n```\n<br>\n\n\n## B. Visualising numeric variables\n\n### 8. Lending Club dataset (Slides #38-)\n\n```{r, eval=TRUE,echo=TRUE}\nlibrary(openintro)\nglimpse(loans_full_schema)\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# selecting variables\n\nloans <- loans_full_schema %>%\n select(loan_amount, interest_rate, term, grade, \n state, annual_income, homeownership, debt_to_income)\nglimpse(loans)\n\n```\n<br>\n\n### 9. Plotting Histograms\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans) + aes(x = loan_amount) +\n geom_histogram()\n\n```\n<br>\n\n### 10. Changing histogram binwidths\n\n```{r, eval=TRUE,echo=TRUE}\n# binwidth = 1000\nggplot(loans, aes(x = loan_amount)) +\n geom_histogram(binwidth = 1000)\n\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# binwidth = 5000\nggplot(loans, aes(x = loan_amount)) +\n geom_histogram(binwidth = 5000)\n\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# binwidth = 20000\nggplot(loans, aes(x = loan_amount)) +\n geom_histogram(binwidth = 20000)\n\n```\n<br>\n\n### 11. Customising histogram \n```{r, eval=TRUE,echo=TRUE}\n# adding labels\n\nggplot(loans, aes(x = loan_amount)) + geom_histogram(binwidth = 5000) +\n labs(x = \"Loan amount ($)\", y = \"Frequency\", title = \"Amounts of Lending Club loans\" )\n```\n<br>\n\n### 12. Filling with a categorical variable\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount, fill = homeownership)) +\n geom_histogram(binwidth = 5000, alpha = 0.5) +\n labs(x = \"Loan amount ($)\",y = \"Frequency\",title = \"Amounts of Lending Club loans\")\n```\n<br>\n\n### 13. Facet with a categorical variable\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount, fill = homeownership)) + geom_histogram(binwidth = 5000) +\n labs(x = \"Loan amount ($)\",y = \"Frequency\",title = \"Amounts of Lending Club loans\") +\n facet_wrap(~ homeownership, nrow = 3)\n```\n<br>\n\n### 14. Density Plot\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density()\n```\n<br>\n\n### 14. Adjusting Density Plot bandwidths\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 0.5)\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 1) # <- default bandwidth\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 2)\n```\n<br>\n\n### 15. Customising Density Plot \n```{r, eval=TRUE,echo=TRUE}\n# adding labels\n\nggplot(loans, aes(x = loan_amount)) +\n geom_density(adjust = 2) +\n labs( x = \"Loan amount ($)\", y = \"Density\", title = \"Amounts of Lending Club loans\" )\n```\n<br>\n\n### 16. Box Plots & outliers\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = interest_rate)) +\n geom_boxplot()\n```\n<br>\n```{r, eval=TRUE,echo=TRUE}\n\nggplot(loans, aes(x = annual_income)) +\n geom_boxplot()\n```\n<br>\n\n### 17. Customising Box Plots\n```{r, eval=TRUE,echo=TRUE}\n# adding labels + removing the ticks along axes (look at diff from prev graph)\n\nggplot(loans, aes(x = interest_rate)) +geom_boxplot() +labs(x = \"Interest rate (%)\",y = NULL,\n title = \"Interest rates of Lending Club loans\") +\n theme( axis.ticks.y = element_blank(), axis.text.y = element_blank() )\n```\n<br>\n\n### 18. Adding a categoric variable\n```{r, eval=TRUE,echo=TRUE}\n# sorting \"interest rates\" by \"grade of application\"\n\nggplot(loans, aes(x = interest_rate,\n y = grade)) +\n geom_boxplot() +\n labs(x = \"Interest rate (%)\",y = \"Grade\",title = \"Interest rates of Lending Club loans\",\n      subtitle = \"by grade of loan\")\n```\n<br>\n\n### 19. Scatterplots\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\n geom_point()\n```\n<br>\n\n### 20. Hex plots\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = debt_to_income, y = interest_rate)) +\n geom_hex()\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\n# filtering debt to income to < 100\n\nggplot(loans %>% filter(debt_to_income < 100), \n aes(x = debt_to_income, y = interest_rate)) +\n geom_hex()\n```\n<br>\n\n## C. Visualising categoric variables\n\n### 21. Bar plot (slide #67)\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = homeownership)) +\n geom_bar()\n```\n<br>\n\n### 22. Segmented Bar plot (slide #68-69)\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = homeownership, fill = grade)) +\n geom_bar()\n```\n<br>\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(x = homeownership, fill = grade)) +\n geom_bar(position = \"fill\")\n```\n<br>\n\n### 23. Customising Bar plots (slide #71)\n\n```{r, eval=TRUE,echo=TRUE}\nggplot(loans, aes(y = homeownership, fill = grade)) + geom_bar(position = \"fill\") +\nlabs( x = \"Proportion\", \n      y = \"Homeownership\", \n      fill = \"Grade\", \n      title = \"Grades of Lending Club loans\", \n      subtitle = \"and homeownership of lendee\")\n```\n<br>\n\n\n## D. Visualising variables of varied types\n\n### 24. Violin plots (slide #73)\n```{r, eval=TRUE,echo=TRUE}\n# helps visualise rs btw var of diff types (eg numeric & categorical)\n\nggplot(loans, aes(x = homeownership, y = loan_amount)) +\n geom_violin()\n\n```\n<br>\n\n### 25. Ridge plots (slide #74)\n```{r, eval=TRUE,echo=TRUE}\n# instead of superimposing them, now placing them above on another\n\nlibrary(ggridges)\nggplot(loans, aes(x = loan_amount, y = grade, fill = grade, color = grade)) + \n geom_density_ridges(alpha = 0.5)\n\n```\n<br>\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"pdf_document":"default","html_document":"default"},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"W7-code-along.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"cosmo","title":"Week 7 Code along/Challenge","author":"Janelle Tan","date":"`r Sys.Date()`"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}