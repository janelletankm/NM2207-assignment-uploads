{"title":"Challenge-5","markdown":{"yaml":{"title":"Challenge-5","author":"Insert your name here","date":"`r Sys.Date()`","output":"html_document"},"headingText":"Questions","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n<br>\n\n#### Question-1: Local Variable Shadowing \n\nCreate an R function that defines a global variable called `x` with a value of 5. Inside the function, declare a local variable also named `x` with a value of 10. Print the value of `x` both inside and outside the function to demonstrate shadowing.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\n# Define a global variable x with a value of 5\nx <- 5\n\n# Create a function that declares a local variable x with a value of 10\nfunction_1 <- function() {\n  x <- 10\n  cat(\"Inside function_1, x =\", x, \"\\n\")\n}\n\n# Print the global x before calling the function\ncat(\"Before calling function_1, x =\", x, \"\\n\")\n\n# Call the function\nfunction_1()\n\n# Print the global x after calling the function\ncat(\"After calling function_1, x =\", x, \"\\n\")\n\n\n```\n<br>\n\n#### Question-2: Modify Global Variable\n\nCreate an R function that takes an argument and adds it to a global variable called `total`. Call the function multiple times with different arguments to accumulate the values in `total`.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\ntotal = 5\n\nfunction_2 <- function(x) {\n  total <<- total + x\n}\n\nfunction_2(5)\nfunction_2(6)\ncat(\"The updated total is:\", total, \"\\n\")\n```\n<br>\n\n#### Question-3: Global and Local Interaction \n\nWrite an R program that includes a global variable `total` with an initial value of 100. Create a function that takes an argument, adds it to `total`, and returns the updated `total`. Demonstrate how this function interacts with the global variable.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\ntotal <- 100\n\nfunction_3 <- function(x) {\n  total <<- total + x\n  return(total)\n}\n\nfunction_3(5)\n```\n<br>\n\n#### Question-4: Nested Functions\n\nDefine a function `outer_function` that declares a local variable `x` with a value of 5. Inside `outer_function`, define another function `inner_function` that prints the value of `x`. Call both functions to show how the inner function accesses the variable from the outer function's scope.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\nouter_function <- function(x = 5) {\n  inner_function <- function() {\n    print(x)\n  }\n  # Call the inner function from within the outer function\n  inner_function()\n}\n\nouter_function(5)\n\n#Explanation:\n\n#You define the outer_function with a default value of 5 for the x parameter. Within outer_function, you define the inner_function, which prints the value of x.\n\n#When you call outer_function(5), it calls inner_function() from within its scope.\n\n#Since inner_function is inside outer_function, it has access to the x variable from the outer function's scope, which is 5, and it prints that value to the console.\n\n```\n<br>\n\n#### Question-5: Meme Generator Function\n\nCreate a function that takes a text input and generates a humorous meme with the text overlaid on an image of your choice. You can use the `magick` package for image manipulation. You can find more details about the commands offered by the package, with some examples of annotating images here: https://cran.r-project.org/web/packages/magick/vignettes/intro.html\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\n# Install and load the magick package\n# Specify a CRAN mirror \noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\ninstall.packages(\"magick\")\nlibrary(magick)\n\ngenerate_meme <- function(text, output_filename) {\n  # Load the base image (replace \"sample.jpg\" with your image file path)\n  base_image <- image_read(\"C:/Users/janel/OneDrive/Documents/Y2S1 NM2207/Week 5/meme_base_image.jpg\")\n  \n  # Define font properties\n  font_size <- 25\n  font_color <- \"black\"\n  font_path <- \"C:/Windows/Fonts/BASKVILL.ttf\"  # Replace with the path to your font file\n  \n  # Create a drawing object\n  meme_draw <- image_draw(base_image)\n  \n  # Add text to the image using the 'annotate' function\n  meme_image <- meme_draw %>%\n    image_annotate(\n      text = text,\n      color = font_color,\n      size = font_size,\n      location = \"+20+20\",  # X and Y coordinates for text position\n      font = font_path\n    )\n  \n  # Specify the output path to your \"Downloads\" directory\n  output_path <- file.path(Sys.getenv(\"USERPROFILE\"), \"Downloads\", output_filename)\n  \n  # Save the meme to the \"Downloads\" directory\n  image_write(meme_image, path = output_path)\n  \n  cat(\"Meme generated and saved to\", output_path, \"\\n\")\n}\n\n# Usage of the function:\ngenerate_meme(\"When there's a week 6 quiz...\", \"output_meme.jpg\")\n\n\n#output file name is called output_meme.jpg\n\n```\n<br>\n\n#### Question-6: Text Analysis Game  \n\nDevelop a text analysis game in which the user inputs a sentence, and the R function provides statistics like the number of words, characters, and average word length. Reward the user with a \"communication skill level\" based on their input.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\n# Function to analyze user input and calculate communication skill level\nanalyze_text <- function(user_input) {\n  # Count the number of characters and words in the input\n  num_characters <- nchar(user_input)\n  words <- strsplit(user_input, \"\\\\s+\")\n  num_words <- length(words[[1]])\n  \n  # Calculate the average word length\n  avg_word_length <- num_characters / num_words\n  \n  # Determine the communication skill level\n  skill_level <- switch(\n    TRUE,\n    avg_word_length < 4, \"Beginner\",\n    avg_word_length < 6, \"Intermediate\",\n    TRUE, \"Advanced\"\n  )\n  \n  # Prepare the result message\n  result_message <- paste(\n    \"Number of characters:\", num_characters,\n    \"\\nNumber of words:\", num_words,\n    \"\\nAverage word length:\", round(avg_word_length, 2),\n    \"\\nCommunication skill level:\", skill_level\n  )\n  \n  return(result_message)\n}\n\n# Main game loop\nwhile (TRUE) {\n  cat(\"Welcome to the Text Analysis Game!\\n\")\n  cat(\"Enter a sentence (or type 'quit' to exit): \")\n  \n  user_input <- readline(prompt = \"\")\n  \n  # Check if the user wants to quit\n  if (tolower(user_input) == \"quit\") {\n    cat(\"Goodbye! Thanks for playing.\\n\")\n    break\n  }\n  \n  # Analyze the user's input\n  result <- analyze_text(user_input)\n  cat(\"\\nAnalysis Result:\\n\")\n  cat(result, \"\\n\\n\")\n}\n\n```\n<br>","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n```\n\n## Questions\n<br>\n\n#### Question-1: Local Variable Shadowing \n\nCreate an R function that defines a global variable called `x` with a value of 5. Inside the function, declare a local variable also named `x` with a value of 10. Print the value of `x` both inside and outside the function to demonstrate shadowing.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\n# Define a global variable x with a value of 5\nx <- 5\n\n# Create a function that declares a local variable x with a value of 10\nfunction_1 <- function() {\n  x <- 10\n  cat(\"Inside function_1, x =\", x, \"\\n\")\n}\n\n# Print the global x before calling the function\ncat(\"Before calling function_1, x =\", x, \"\\n\")\n\n# Call the function\nfunction_1()\n\n# Print the global x after calling the function\ncat(\"After calling function_1, x =\", x, \"\\n\")\n\n\n```\n<br>\n\n#### Question-2: Modify Global Variable\n\nCreate an R function that takes an argument and adds it to a global variable called `total`. Call the function multiple times with different arguments to accumulate the values in `total`.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\ntotal = 5\n\nfunction_2 <- function(x) {\n  total <<- total + x\n}\n\nfunction_2(5)\nfunction_2(6)\ncat(\"The updated total is:\", total, \"\\n\")\n```\n<br>\n\n#### Question-3: Global and Local Interaction \n\nWrite an R program that includes a global variable `total` with an initial value of 100. Create a function that takes an argument, adds it to `total`, and returns the updated `total`. Demonstrate how this function interacts with the global variable.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\ntotal <- 100\n\nfunction_3 <- function(x) {\n  total <<- total + x\n  return(total)\n}\n\nfunction_3(5)\n```\n<br>\n\n#### Question-4: Nested Functions\n\nDefine a function `outer_function` that declares a local variable `x` with a value of 5. Inside `outer_function`, define another function `inner_function` that prints the value of `x`. Call both functions to show how the inner function accesses the variable from the outer function's scope.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\nouter_function <- function(x = 5) {\n  inner_function <- function() {\n    print(x)\n  }\n  # Call the inner function from within the outer function\n  inner_function()\n}\n\nouter_function(5)\n\n#Explanation:\n\n#You define the outer_function with a default value of 5 for the x parameter. Within outer_function, you define the inner_function, which prints the value of x.\n\n#When you call outer_function(5), it calls inner_function() from within its scope.\n\n#Since inner_function is inside outer_function, it has access to the x variable from the outer function's scope, which is 5, and it prints that value to the console.\n\n```\n<br>\n\n#### Question-5: Meme Generator Function\n\nCreate a function that takes a text input and generates a humorous meme with the text overlaid on an image of your choice. You can use the `magick` package for image manipulation. You can find more details about the commands offered by the package, with some examples of annotating images here: https://cran.r-project.org/web/packages/magick/vignettes/intro.html\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\n# Install and load the magick package\n# Specify a CRAN mirror \noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\ninstall.packages(\"magick\")\nlibrary(magick)\n\ngenerate_meme <- function(text, output_filename) {\n  # Load the base image (replace \"sample.jpg\" with your image file path)\n  base_image <- image_read(\"C:/Users/janel/OneDrive/Documents/Y2S1 NM2207/Week 5/meme_base_image.jpg\")\n  \n  # Define font properties\n  font_size <- 25\n  font_color <- \"black\"\n  font_path <- \"C:/Windows/Fonts/BASKVILL.ttf\"  # Replace with the path to your font file\n  \n  # Create a drawing object\n  meme_draw <- image_draw(base_image)\n  \n  # Add text to the image using the 'annotate' function\n  meme_image <- meme_draw %>%\n    image_annotate(\n      text = text,\n      color = font_color,\n      size = font_size,\n      location = \"+20+20\",  # X and Y coordinates for text position\n      font = font_path\n    )\n  \n  # Specify the output path to your \"Downloads\" directory\n  output_path <- file.path(Sys.getenv(\"USERPROFILE\"), \"Downloads\", output_filename)\n  \n  # Save the meme to the \"Downloads\" directory\n  image_write(meme_image, path = output_path)\n  \n  cat(\"Meme generated and saved to\", output_path, \"\\n\")\n}\n\n# Usage of the function:\ngenerate_meme(\"When there's a week 6 quiz...\", \"output_meme.jpg\")\n\n\n#output file name is called output_meme.jpg\n\n```\n<br>\n\n#### Question-6: Text Analysis Game  \n\nDevelop a text analysis game in which the user inputs a sentence, and the R function provides statistics like the number of words, characters, and average word length. Reward the user with a \"communication skill level\" based on their input.\n\n**Solutions:**\n\n```{r, eval=TRUE,echo=TRUE}\n# Enter code here\n# Function to analyze user input and calculate communication skill level\nanalyze_text <- function(user_input) {\n  # Count the number of characters and words in the input\n  num_characters <- nchar(user_input)\n  words <- strsplit(user_input, \"\\\\s+\")\n  num_words <- length(words[[1]])\n  \n  # Calculate the average word length\n  avg_word_length <- num_characters / num_words\n  \n  # Determine the communication skill level\n  skill_level <- switch(\n    TRUE,\n    avg_word_length < 4, \"Beginner\",\n    avg_word_length < 6, \"Intermediate\",\n    TRUE, \"Advanced\"\n  )\n  \n  # Prepare the result message\n  result_message <- paste(\n    \"Number of characters:\", num_characters,\n    \"\\nNumber of words:\", num_words,\n    \"\\nAverage word length:\", round(avg_word_length, 2),\n    \"\\nCommunication skill level:\", skill_level\n  )\n  \n  return(result_message)\n}\n\n# Main game loop\nwhile (TRUE) {\n  cat(\"Welcome to the Text Analysis Game!\\n\")\n  cat(\"Enter a sentence (or type 'quit' to exit): \")\n  \n  user_input <- readline(prompt = \"\")\n  \n  # Check if the user wants to quit\n  if (tolower(user_input) == \"quit\") {\n    cat(\"Goodbye! Thanks for playing.\\n\")\n    break\n  }\n  \n  # Analyze the user's input\n  result <- analyze_text(user_input)\n  cat(\"\\nAnalysis Result:\\n\")\n  cat(result, \"\\n\\n\")\n}\n\n```\n<br>"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"NM2207-W5-Challenge-5.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"cosmo","title":"Challenge-5","author":"Insert your name here","date":"`r Sys.Date()`"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}